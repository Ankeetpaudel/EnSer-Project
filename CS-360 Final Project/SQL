CREATE DATABASE IF NOT EXISTS my_flask_app;
USE my_flask_app;

CREATE TABLE Users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    role VARCHAR(255) NOT NULL,
    department VARCHAR(255),
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    username VARCHAR(255) NOT NULL UNIQUE,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL
);

CREATE TABLE projects (
    project_id INT AUTO_INCREMENT PRIMARY KEY,
    community_member_id INT NOT NULL,
    project_department VARCHAR(255) NOT NULL,
    title VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    FOREIGN KEY (community_member_id) REFERENCES Users(user_id)
);

CREATE TABLE notifications (
    notification_id INT AUTO_INCREMENT PRIMARY KEY,
    project_id INT NOT NULL,
    recipient_id INT NOT NULL,
    sender_id INT NOT NULL,
    notification_type VARCHAR(255) NOT NULL,
    status VARCHAR(255) DEFAULT 'Pending',
    message TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (recipient_id) REFERENCES Users(user_id),
    FOREIGN KEY (sender_id) REFERENCES Users(user_id)
);

CREATE TABLE syllabuses (
    syllabus_id INT AUTO_INCREMENT PRIMARY KEY,
    project_id INT NOT NULL,
    auto_syllabus TEXT,
    grading_rubric JSON,
    notification_id INT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (notification_id) REFERENCES notifications(notification_id)
);

CREATE TABLE submissions (
    submission_id INT AUTO_INCREMENT PRIMARY KEY,
    notification_id INT NOT NULL,
    student_id INT NOT NULL,
    professor_id INT NOT NULL,
    file_data LONGBLOB,
    submitted_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    status VARCHAR(255) DEFAULT 'Submitted' NOT NULL,
    INDEX ix_submissions_notification_id (notification_id),
    INDEX ix_submissions_student_id (student_id),
    INDEX ix_submissions_professor_id (professor_id),
    FOREIGN KEY (notification_id) REFERENCES notifications(notification_id),
    FOREIGN KEY (student_id) REFERENCES Users(user_id),
    FOREIGN KEY (professor_id) REFERENCES Users(user_id)
);

CREATE TABLE grades (
    grade_id INT AUTO_INCREMENT PRIMARY KEY,
    submission_id INT NOT NULL,
    criterion_name VARCHAR(255) NOT NULL,
    percentage VARCHAR(10) NOT NULL,
    assigned_score DECIMAL(5, 2) NOT NULL,
    total_score FLOAT,
    comments TEXT,
    status VARCHAR(50) DEFAULT 'Pending',
    FOREIGN KEY (submission_id) REFERENCES submissions(submission_id)
);

CREATE TABLE Feedback (
    feedback_id INT AUTO_INCREMENT PRIMARY KEY,
    submission_id INT NOT NULL,
    content TEXT NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (submission_id) REFERENCES submissions(submission_id)
);
